// Auto-generated import function lookup table
// Generated by tools/generate_import_lookup.py
// DO NOT EDIT MANUALLY - regenerate using: python tools/generate_import_lookup.py

#include <stdafx.h>
#include <ppc/ppc_context.h>
#include <unordered_map>
#include <string>

// Forward declare all __imp__ functions
// These are defined in imports.cpp via GUEST_FUNCTION_HOOK
PPC_EXTERN_FUNC(__imp__DbgBreakPoint);
PPC_EXTERN_FUNC(__imp__DbgPrint);
PPC_EXTERN_FUNC(__imp__ExAllocatePool);
PPC_EXTERN_FUNC(__imp__ExAllocatePoolWithTag);
PPC_EXTERN_FUNC(__imp__ExCreateThread);
PPC_EXTERN_FUNC(__imp__ExFreePool);
PPC_EXTERN_FUNC(__imp__ExGetXConfigSetting);
PPC_EXTERN_FUNC(__imp__ExRegisterTitleTerminateNotification);
PPC_EXTERN_FUNC(__imp__ExTerminateThread);
PPC_EXTERN_FUNC(__imp__FscSetCacheElementCount);
PPC_EXTERN_FUNC(__imp__HalReturnToFirmware);
PPC_EXTERN_FUNC(__imp__IoCheckShareAccess);
PPC_EXTERN_FUNC(__imp__IoCompleteRequest);
PPC_EXTERN_FUNC(__imp__IoCreateDevice);
PPC_EXTERN_FUNC(__imp__IoDeleteDevice);
PPC_EXTERN_FUNC(__imp__IoInvalidDeviceRequest);
PPC_EXTERN_FUNC(__imp__IoRemoveShareAccess);
PPC_EXTERN_FUNC(__imp__IoSetShareAccess);
PPC_EXTERN_FUNC(__imp__KeAcquireSpinLockAtRaisedIrql);
PPC_EXTERN_FUNC(__imp__KeBugCheck);
PPC_EXTERN_FUNC(__imp__KeBugCheckEx);
PPC_EXTERN_FUNC(__imp__KeDelayExecutionThread);
PPC_EXTERN_FUNC(__imp__KeEnableFpuExceptions);
PPC_EXTERN_FUNC(__imp__KeEnterCriticalRegion);
PPC_EXTERN_FUNC(__imp__KeGetCurrentProcessType);
PPC_EXTERN_FUNC(__imp__KeInitializeSemaphore);
PPC_EXTERN_FUNC(__imp__KeLeaveCriticalRegion);
PPC_EXTERN_FUNC(__imp__KeLockL2);
PPC_EXTERN_FUNC(__imp__KePulseEvent);
PPC_EXTERN_FUNC(__imp__KeQueryBasePriorityThread);
PPC_EXTERN_FUNC(__imp__KeQueryPerformanceFrequency);
PPC_EXTERN_FUNC(__imp__KeQuerySystemTime);
PPC_EXTERN_FUNC(__imp__KeRaiseIrqlToDpcLevel);
PPC_EXTERN_FUNC(__imp__KeReleaseSemaphore);
PPC_EXTERN_FUNC(__imp__KeReleaseSpinLockFromRaisedIrql);
PPC_EXTERN_FUNC(__imp__KeResetEvent);
PPC_EXTERN_FUNC(__imp__KeResumeThread);
PPC_EXTERN_FUNC(__imp__KeSetAffinityThread);
PPC_EXTERN_FUNC(__imp__KeSetBasePriorityThread);
PPC_EXTERN_FUNC(__imp__KeSetDisableBoostThread);
PPC_EXTERN_FUNC(__imp__KeSetEvent);
PPC_EXTERN_FUNC(__imp__KeTlsAlloc);
PPC_EXTERN_FUNC(__imp__KeTlsFree);
PPC_EXTERN_FUNC(__imp__KeTlsGetValue);
PPC_EXTERN_FUNC(__imp__KeTlsSetValue);
PPC_EXTERN_FUNC(__imp__KeTryToAcquireSpinLockAtRaisedIrql);
PPC_EXTERN_FUNC(__imp__KeUnlockL2);
PPC_EXTERN_FUNC(__imp__KeWaitForMultipleObjects);
PPC_EXTERN_FUNC(__imp__KeWaitForSingleObject);
PPC_EXTERN_FUNC(__imp__KfAcquireSpinLock);
PPC_EXTERN_FUNC(__imp__KfLowerIrql);
PPC_EXTERN_FUNC(__imp__KfReleaseSpinLock);
PPC_EXTERN_FUNC(__imp__KiApcNormalRoutineNop);
PPC_EXTERN_FUNC(__imp__MmAllocatePhysicalMemory);
PPC_EXTERN_FUNC(__imp__MmAllocatePhysicalMemoryEx);
PPC_EXTERN_FUNC(__imp__MmFreePhysicalMemory);
PPC_EXTERN_FUNC(__imp__MmGetPhysicalAddress);
PPC_EXTERN_FUNC(__imp__MmQueryAddressProtect);
PPC_EXTERN_FUNC(__imp__MmQueryAllocationSize);
PPC_EXTERN_FUNC(__imp__MmQueryStatistics);
PPC_EXTERN_FUNC(__imp__MmSetAddressProtect);
PPC_EXTERN_FUNC(__imp__NetDll_WSACleanup);
PPC_EXTERN_FUNC(__imp__NetDll_WSAStartup);
PPC_EXTERN_FUNC(__imp__NetDll_XNetGetTitleXnAddr);
PPC_EXTERN_FUNC(__imp__NetDll_XNetStartup);
PPC_EXTERN_FUNC(__imp__NetDll_XNetCleanup);

PPC_EXTERN_FUNC(__imp__NetDll___WSAFDIsSet);
PPC_EXTERN_FUNC(__imp__NetDll_accept);
PPC_EXTERN_FUNC(__imp__NetDll_bind);
PPC_EXTERN_FUNC(__imp__NetDll_closesocket);
PPC_EXTERN_FUNC(__imp__NetDll_connect);
PPC_EXTERN_FUNC(__imp__NetDll_inet_addr);
PPC_EXTERN_FUNC(__imp__NetDll_listen);
PPC_EXTERN_FUNC(__imp__NetDll_recv);
PPC_EXTERN_FUNC(__imp__NetDll_select);
PPC_EXTERN_FUNC(__imp__NetDll_send);
PPC_EXTERN_FUNC(__imp__NetDll_setsockopt);
PPC_EXTERN_FUNC(__imp__NetDll_socket);
PPC_EXTERN_FUNC(__imp__NtAllocateVirtualMemory);
PPC_EXTERN_FUNC(__imp__NtCancelTimer);
PPC_EXTERN_FUNC(__imp__NtClearEvent);
PPC_EXTERN_FUNC(__imp__NtClose);
PPC_EXTERN_FUNC(__imp__NtCreateEvent);
PPC_EXTERN_FUNC(__imp__NtCreateFile);
PPC_EXTERN_FUNC(__imp__NtCreateIoCompletion);
PPC_EXTERN_FUNC(__imp__NtCreateMutant);
PPC_EXTERN_FUNC(__imp__NtCreateSemaphore);
PPC_EXTERN_FUNC(__imp__NtCreateTimer);
PPC_EXTERN_FUNC(__imp__NtDuplicateObject);
PPC_EXTERN_FUNC(__imp__NtFlushBuffersFile);
PPC_EXTERN_FUNC(__imp__NtFreeVirtualMemory);
PPC_EXTERN_FUNC(__imp__NtOpenFile);
PPC_EXTERN_FUNC(__imp__NtProtectVirtualMemory);
PPC_EXTERN_FUNC(__imp__NtPulseEvent);
PPC_EXTERN_FUNC(__imp__NtQueryDirectoryFile);
PPC_EXTERN_FUNC(__imp__NtQueryFullAttributesFile);
PPC_EXTERN_FUNC(__imp__NtQueryInformationFile);
PPC_EXTERN_FUNC(__imp__NtQueryVirtualMemory);
PPC_EXTERN_FUNC(__imp__NtQueryVolumeInformationFile);
PPC_EXTERN_FUNC(__imp__NtQueueApcThread);
PPC_EXTERN_FUNC(__imp__NtReadFile);
PPC_EXTERN_FUNC(__imp__NtReleaseMutant);
PPC_EXTERN_FUNC(__imp__NtReleaseSemaphore);
PPC_EXTERN_FUNC(__imp__NtRemoveIoCompletion);
PPC_EXTERN_FUNC(__imp__NtResumeThread);
PPC_EXTERN_FUNC(__imp__NtSetEvent);
PPC_EXTERN_FUNC(__imp__NtSetInformationFile);
PPC_EXTERN_FUNC(__imp__NtSetIoCompletion);
PPC_EXTERN_FUNC(__imp__NtSetTimerEx);
PPC_EXTERN_FUNC(__imp__NtSignalAndWaitForSingleObjectEx);
PPC_EXTERN_FUNC(__imp__NtSuspendThread);
PPC_EXTERN_FUNC(__imp__NtWaitForMultipleObjectsEx);
PPC_EXTERN_FUNC(__imp__NtWaitForSingleObjectEx);
PPC_EXTERN_FUNC(__imp__NtWriteFile);
PPC_EXTERN_FUNC(__imp__NtYieldExecution);
PPC_EXTERN_FUNC(__imp__ObCreateSymbolicLink);
PPC_EXTERN_FUNC(__imp__ObDeleteSymbolicLink);
PPC_EXTERN_FUNC(__imp__ObDereferenceObject);
PPC_EXTERN_FUNC(__imp__ObIsTitleObject);
PPC_EXTERN_FUNC(__imp__ObLookupThreadByThreadId);
PPC_EXTERN_FUNC(__imp__ObOpenObjectByName);
PPC_EXTERN_FUNC(__imp__ObOpenObjectByPointer);
PPC_EXTERN_FUNC(__imp__ObReferenceObject);
PPC_EXTERN_FUNC(__imp__ObReferenceObjectByHandle);
PPC_EXTERN_FUNC(__imp__RtlCaptureContext);
PPC_EXTERN_FUNC(__imp__RtlCompareMemory);
PPC_EXTERN_FUNC(__imp__RtlCompareMemoryUlong);
PPC_EXTERN_FUNC(__imp__RtlCompareStringN);
PPC_EXTERN_FUNC(__imp__RtlEnterCriticalSection);
PPC_EXTERN_FUNC(__imp__RtlFillMemoryUlong);
PPC_EXTERN_FUNC(__imp__RtlFreeAnsiString);
PPC_EXTERN_FUNC(__imp__RtlImageXexHeaderField);
PPC_EXTERN_FUNC(__imp__RtlInitAnsiString);
PPC_EXTERN_FUNC(__imp__RtlInitUnicodeString);
PPC_EXTERN_FUNC(__imp__RtlInitializeCriticalSection);
PPC_EXTERN_FUNC(__imp__RtlInitializeCriticalSectionAndSpinCount);
PPC_EXTERN_FUNC(__imp__RtlLeaveCriticalSection);
PPC_EXTERN_FUNC(__imp__RtlMultiByteToUnicodeN);
PPC_EXTERN_FUNC(__imp__RtlNtStatusToDosError);
PPC_EXTERN_FUNC(__imp__RtlRaiseException);
PPC_EXTERN_FUNC(__imp__RtlTimeFieldsToTime);
PPC_EXTERN_FUNC(__imp__RtlTimeToTimeFields);
PPC_EXTERN_FUNC(__imp__RtlTryEnterCriticalSection);
PPC_EXTERN_FUNC(__imp__RtlUnicodeStringToAnsiString);
PPC_EXTERN_FUNC(__imp__RtlUnicodeToMultiByteN);
PPC_EXTERN_FUNC(__imp__RtlUnwind);
PPC_EXTERN_FUNC(__imp__RtlUpcaseUnicodeChar);
PPC_EXTERN_FUNC(__imp__StfsControlDevice);
PPC_EXTERN_FUNC(__imp__StfsCreateDevice);
PPC_EXTERN_FUNC(__imp__VdCallGraphicsNotificationRoutines);
PPC_EXTERN_FUNC(__imp__VdEnableDisableClockGating);
PPC_EXTERN_FUNC(__imp__VdEnableRingBufferRPtrWriteBack);
PPC_EXTERN_FUNC(__imp__VdGetCurrentDisplayGamma);
PPC_EXTERN_FUNC(__imp__VdGetCurrentDisplayInformation);
PPC_EXTERN_FUNC(__imp__VdGetGraphicsAsicID);
PPC_EXTERN_FUNC(__imp__VdGetSystemCommandBuffer);
PPC_EXTERN_FUNC(__imp__VdInitializeEDRAM);
PPC_EXTERN_FUNC(__imp__VdInitializeEngines);
PPC_EXTERN_FUNC(__imp__VdInitializeRingBuffer);
PPC_EXTERN_FUNC(__imp__VdInitializeScalerCommandBuffer);
PPC_EXTERN_FUNC(__imp__VdIsHSIOTrainingSucceeded);
PPC_EXTERN_FUNC(__imp__VdPersistDisplay);
PPC_EXTERN_FUNC(__imp__VdQuerySystemCommandBuffer);
PPC_EXTERN_FUNC(__imp__VdQueryVideoFlags);
PPC_EXTERN_FUNC(__imp__VdQueryVideoMode);
PPC_EXTERN_FUNC(__imp__VdRegisterGraphicsNotificationRoutine);
PPC_EXTERN_FUNC(__imp__VdRetrainEDRAM);
PPC_EXTERN_FUNC(__imp__VdRetrainEDRAMWorker);
PPC_EXTERN_FUNC(__imp__VdSetDisplayMode);
PPC_EXTERN_FUNC(__imp__VdSetGraphicsInterruptCallback);
PPC_EXTERN_FUNC(__imp__VdSetSystemCommandBuffer);
PPC_EXTERN_FUNC(__imp__VdSetSystemCommandBufferGpuIdentifierAddress);
PPC_EXTERN_FUNC(__imp__VdShutdownEngines);
PPC_EXTERN_FUNC(__imp__VdSwap);
PPC_EXTERN_FUNC(__imp__VdUnregisterGraphicsNotificationRoutine);
PPC_EXTERN_FUNC(__imp__XAudioGetVoiceCategoryVolume);
PPC_EXTERN_FUNC(__imp__XAudioGetVoiceCategoryVolumeChangeMask);
PPC_EXTERN_FUNC(__imp__XAudioRegisterRenderDriverClient);
PPC_EXTERN_FUNC(__imp__XAudioSubmitRenderDriverFrame);
PPC_EXTERN_FUNC(__imp__XAudioUnregisterRenderDriverClient);
PPC_EXTERN_FUNC(__imp__XGetAVPack);
PPC_EXTERN_FUNC(__imp__XGetGameRegion);
PPC_EXTERN_FUNC(__imp__XGetLanguage);
PPC_EXTERN_FUNC(__imp__XGetVideoMode);
PPC_EXTERN_FUNC(__imp__XMACreateContext);
PPC_EXTERN_FUNC(__imp__XMAReleaseContext);
PPC_EXTERN_FUNC(__imp__XMsgInProcessCall);
PPC_EXTERN_FUNC(__imp__XMsgStartIORequest);
PPC_EXTERN_FUNC(__imp__XMsgStartIORequestEx);
PPC_EXTERN_FUNC(__imp__XNotifyGetNext);
PPC_EXTERN_FUNC(__imp__XamAlloc);
PPC_EXTERN_FUNC(__imp__XamContentClose);
PPC_EXTERN_FUNC(__imp__XamContentCreateEnumerator);
PPC_EXTERN_FUNC(__imp__XamContentCreateEx);
PPC_EXTERN_FUNC(__imp__XamContentDelete);
PPC_EXTERN_FUNC(__imp__XamContentGetCreator);
PPC_EXTERN_FUNC(__imp__XamContentGetDeviceData);
PPC_EXTERN_FUNC(__imp__XamContentGetDeviceState);
PPC_EXTERN_FUNC(__imp__XamEnableInactivityProcessing);
PPC_EXTERN_FUNC(__imp__XamEnumerate);
PPC_EXTERN_FUNC(__imp__XamFree);
PPC_EXTERN_FUNC(__imp__XamGetExecutionId);
PPC_EXTERN_FUNC(__imp__XamGetSystemVersion);
PPC_EXTERN_FUNC(__imp__XamInputGetCapabilities);
PPC_EXTERN_FUNC(__imp__XamInputGetState);
PPC_EXTERN_FUNC(__imp__XamInputSetState);
PPC_EXTERN_FUNC(__imp__XamLoaderGetLaunchData);
PPC_EXTERN_FUNC(__imp__XamLoaderGetLaunchDataSize);
PPC_EXTERN_FUNC(__imp__XamLoaderLaunchTitle);
PPC_EXTERN_FUNC(__imp__XamLoaderSetLaunchData);
PPC_EXTERN_FUNC(__imp__XamLoaderTerminateTitle);
PPC_EXTERN_FUNC(__imp__XamNotifyCreateListener);
PPC_EXTERN_FUNC(__imp__XamResetInactivity);
PPC_EXTERN_FUNC(__imp__XamShowDeviceSelectorUI);
PPC_EXTERN_FUNC(__imp__XamShowDirtyDiscErrorUI);
PPC_EXTERN_FUNC(__imp__XamShowMessageBoxUI);
PPC_EXTERN_FUNC(__imp__XamShowMessageBoxUIEx);
PPC_EXTERN_FUNC(__imp__XamShowSigninUI);
PPC_EXTERN_FUNC(__imp__XamUserGetSigninInfo);
PPC_EXTERN_FUNC(__imp__XamUserGetSigninState);
PPC_EXTERN_FUNC(__imp__XamUserReadProfileSettings);
PPC_EXTERN_FUNC(__imp__XeCryptBnQwBeSigVerify);
PPC_EXTERN_FUNC(__imp__XeCryptRotSumSha);
PPC_EXTERN_FUNC(__imp__XeCryptSha);
PPC_EXTERN_FUNC(__imp__XeKeysGetKey);
PPC_EXTERN_FUNC(__imp__XexCheckExecutablePrivilege);
PPC_EXTERN_FUNC(__imp__XexGetModuleHandle);
PPC_EXTERN_FUNC(__imp__XexGetModuleSection);
PPC_EXTERN_FUNC(__imp__XexGetProcedureAddress);
PPC_EXTERN_FUNC(__imp____C_specific_handler);
PPC_EXTERN_FUNC(__imp__XamVoiceHeadsetPresent);
PPC_EXTERN_FUNC(__imp__XamContentLaunchImage);
PPC_EXTERN_FUNC(__imp__XamContentGetDeviceName);
PPC_EXTERN_FUNC(__imp__XamContentCreateDeviceEnumerator);
PPC_EXTERN_FUNC(__imp__XamContentGetLicenseMask);
PPC_EXTERN_FUNC(__imp__XamContentGetThumbnail);
PPC_EXTERN_FUNC(__imp__XamContentSetThumbnail);
PPC_EXTERN_FUNC(__imp__XamContentFlush);
PPC_EXTERN_FUNC(__imp__XamContentInstall);
PPC_EXTERN_FUNC(__imp__XamContentCreate);
PPC_EXTERN_FUNC(__imp__XamSessionCreateHandle);
PPC_EXTERN_FUNC(__imp__XamSessionRefObjByHandle);
PPC_EXTERN_FUNC(__imp__XamUserGetMembershipTierFromXUID);
PPC_EXTERN_FUNC(__imp__XamUserGetOnlineCountryFromXUID);
PPC_EXTERN_FUNC(__imp__XNetLogonGetMachineID);
PPC_EXTERN_FUNC(__imp__NetDll_XnpUnregisterKeyForCallerType);
PPC_EXTERN_FUNC(__imp__NetDll_XnpRegisterKeyForCallerType);
PPC_EXTERN_FUNC(__imp__NetDll_XnpNoteSystemTime);
PPC_EXTERN_FUNC(__imp__NetDll_XnpGetActiveSocketList);
PPC_EXTERN_FUNC(__imp__NetDll_XnpSetVlanXboxName);
PPC_EXTERN_FUNC(__imp__NetDll_XnpGetVlanXboxName);
PPC_EXTERN_FUNC(__imp__NetDll_XnpLogonSetPState);
PPC_EXTERN_FUNC(__imp__NetDll_XnpLogonSetQVals);
PPC_EXTERN_FUNC(__imp__NetDll_XnpLogonGetQVals);
PPC_EXTERN_FUNC(__imp__NetDll_XnpLogonClearQEvent);
PPC_EXTERN_FUNC(__imp__NetDll_XnpLogonSetQEvent);
PPC_EXTERN_FUNC(__imp__NetDll_XnpLogonSetQFlags);
PPC_EXTERN_FUNC(__imp__NetDll_XnpLogonGetQFlags);
PPC_EXTERN_FUNC(__imp__NetDll_XnpLogonGetStatus);
PPC_EXTERN_FUNC(__imp__NetDll_XnpEthernetInterceptRecv);
PPC_EXTERN_FUNC(__imp__NetDll_XnpEthernetInterceptXmit);
PPC_EXTERN_FUNC(__imp__NetDll_XnpEthernetInterceptSetCallbacks);
PPC_EXTERN_FUNC(__imp__NetDll_XnpCapture);
PPC_EXTERN_FUNC(__imp__NetDll_XnpSaveMachineAccount);
PPC_EXTERN_FUNC(__imp__NetDll_XnpLoadMachineAccount);
PPC_EXTERN_FUNC(__imp__NetDll_XnpGetConfigStatus);
PPC_EXTERN_FUNC(__imp__NetDll_XnpConfig);
PPC_EXTERN_FUNC(__imp__NetDll_XnpConfigUPnP);
PPC_EXTERN_FUNC(__imp__NetDll_XnpSaveConfigParams);
PPC_EXTERN_FUNC(__imp__NetDll_XnpLoadConfigParams);
PPC_EXTERN_FUNC(__imp__NetDll_WSACreateEvent);
PPC_EXTERN_FUNC(__imp__NetDll_WSACloseEvent);
PPC_EXTERN_FUNC(__imp__NetDll_WSASetEvent);
PPC_EXTERN_FUNC(__imp__NetDll_WSAResetEvent);
PPC_EXTERN_FUNC(__imp__NetDll_WSAWaitForMultipleEvents);
PPC_EXTERN_FUNC(__imp____vsnprintf);
PPC_EXTERN_FUNC(__imp__sprintf);
PPC_EXTERN_FUNC(__imp___vsnprintf);
PPC_EXTERN_FUNC(__imp__vsprintf);

// XAM user/profile
PPC_EXTERN_FUNC(__imp__XamUserGetName);
PPC_EXTERN_FUNC(__imp__XamUserAreUsersFriends);
PPC_EXTERN_FUNC(__imp__XamUserCheckPrivilege);
PPC_EXTERN_FUNC(__imp__XamUserCreateStatsEnumerator);
PPC_EXTERN_FUNC(__imp__XamReadTileToTexture);
PPC_EXTERN_FUNC(__imp__XamUserWriteProfileSettings);

// NetDll WSA/sockets
PPC_EXTERN_FUNC(__imp__NetDll_WSASetLastError);
PPC_EXTERN_FUNC(__imp__NetDll_WSAGetLastError);
PPC_EXTERN_FUNC(__imp__NetDll_WSAEventSelect);
PPC_EXTERN_FUNC(__imp__NetDll_WSASendTo);
PPC_EXTERN_FUNC(__imp__NetDll_sendto);
PPC_EXTERN_FUNC(__imp__NetDll_WSASend);
PPC_EXTERN_FUNC(__imp__NetDll_WSARecvFrom);
PPC_EXTERN_FUNC(__imp__NetDll_recvfrom);
PPC_EXTERN_FUNC(__imp__NetDll_WSARecv);
PPC_EXTERN_FUNC(__imp__NetDll_WSACancelOverlappedIO);
PPC_EXTERN_FUNC(__imp__NetDll_WSAGetOverlappedResult);
PPC_EXTERN_FUNC(__imp__NetDll_getpeername);
PPC_EXTERN_FUNC(__imp__NetDll_getsockname);
PPC_EXTERN_FUNC(__imp__NetDll_getsockopt);
PPC_EXTERN_FUNC(__imp__NetDll_ioctlsocket);
PPC_EXTERN_FUNC(__imp__NetDll_shutdown);

// NetDll XNet core set
PPC_EXTERN_FUNC(__imp__NetDll_XNetRandom);
PPC_EXTERN_FUNC(__imp__NetDll_XNetCreateKey);
PPC_EXTERN_FUNC(__imp__NetDll_XNetRegisterKey);
PPC_EXTERN_FUNC(__imp__NetDll_XNetUnregisterKey);
PPC_EXTERN_FUNC(__imp__NetDll_XNetXnAddrToInAddr);
PPC_EXTERN_FUNC(__imp__NetDll_XNetServerToInAddr);
PPC_EXTERN_FUNC(__imp__NetDll_XNetTsAddrToInAddr);
PPC_EXTERN_FUNC(__imp__NetDll_XNetInAddrToXnAddr);
PPC_EXTERN_FUNC(__imp__NetDll_XNetInAddrToServer);
PPC_EXTERN_FUNC(__imp__NetDll_XNetInAddrToString);
PPC_EXTERN_FUNC(__imp__NetDll_XNetUnregisterInAddr);
PPC_EXTERN_FUNC(__imp__NetDll_XNetXnAddrToMachineId);
PPC_EXTERN_FUNC(__imp__NetDll_XNetConnect);
PPC_EXTERN_FUNC(__imp__NetDll_XNetGetConnectStatus);
PPC_EXTERN_FUNC(__imp__NetDll_XNetDnsLookup);
PPC_EXTERN_FUNC(__imp__NetDll_XNetDnsRelease);
PPC_EXTERN_FUNC(__imp__NetDll_XNetQosListen);
PPC_EXTERN_FUNC(__imp__NetDll_XNetQosLookup);
PPC_EXTERN_FUNC(__imp__NetDll_XNetQosServiceLookup);
PPC_EXTERN_FUNC(__imp__NetDll_XNetQosRelease);

// XeCrypt / XeKeys
PPC_EXTERN_FUNC(__imp__XeKeysGetKeyProperties);
PPC_EXTERN_FUNC(__imp__XeCryptAesKey);
PPC_EXTERN_FUNC(__imp__XeCryptAesEcb);
PPC_EXTERN_FUNC(__imp__XeKeysQwNeRsaPrvCrypt);
PPC_EXTERN_FUNC(__imp__XeCryptBnQw_SwapDwQwLeBe);
PPC_EXTERN_FUNC(__imp__XeCryptRandom);
PPC_EXTERN_FUNC(__imp__XeCryptShaFinal);
PPC_EXTERN_FUNC(__imp__XeCryptShaUpdate);
PPC_EXTERN_FUNC(__imp__XeCryptShaInit);
PPC_EXTERN_FUNC(__imp__XeCryptBnQwNeRsaPubCrypt);
PPC_EXTERN_FUNC(__imp__XeCryptBnQwNeRsaPrvCrypt);
PPC_EXTERN_FUNC(__imp__XeCryptBnQwNeRsaKeyGen);
PPC_EXTERN_FUNC(__imp__XeCryptRc4Key);
PPC_EXTERN_FUNC(__imp__XeCryptRc4Ecb);

// XMA
PPC_EXTERN_FUNC(__imp__XMAGetOutputBufferWriteOffset);
PPC_EXTERN_FUNC(__imp__XMASetInputBuffer1);
PPC_EXTERN_FUNC(__imp__XMASetOutputBufferReadOffset);
PPC_EXTERN_FUNC(__imp__XMAInitializeContext);
PPC_EXTERN_FUNC(__imp__XMASetInputBuffer0);
PPC_EXTERN_FUNC(__imp__XMADisableContext);
PPC_EXTERN_FUNC(__imp__XMAEnableContext);
PPC_EXTERN_FUNC(__imp__XMAIsOutputBufferValid);
PPC_EXTERN_FUNC(__imp__XMASetInputBuffer0Valid);
PPC_EXTERN_FUNC(__imp__XMAGetOutputBufferReadOffset);
PPC_EXTERN_FUNC(__imp__XMAIsInputBuffer1Valid);
PPC_EXTERN_FUNC(__imp__XMASetOutputBufferValid);
PPC_EXTERN_FUNC(__imp__XMAIsInputBuffer0Valid);
PPC_EXTERN_FUNC(__imp__XMASetInputBuffer1Valid);

// Additional XNet opts/debug
PPC_EXTERN_FUNC(__imp__NetDll_XNetGetOpt);
PPC_EXTERN_FUNC(__imp__NetDll_XNetSetOpt);
PPC_EXTERN_FUNC(__imp__NetDll_XNetQosGetListenStats);
PPC_EXTERN_FUNC(__imp__NetDll_XNetGetEthernetLinkStatus);
PPC_EXTERN_FUNC(__imp__NetDll_XNetGetBroadcastVersionStatus);
PPC_EXTERN_FUNC(__imp__NetDll_XNetGetDebugXnAddr);

// Misc platform / UI / voice / cache
PPC_EXTERN_FUNC(__imp__XNetLogonGetTitleID);
PPC_EXTERN_FUNC(__imp__FscGetCacheElementCount);
PPC_EXTERN_FUNC(__imp__XamCreateEnumeratorHandle);
PPC_EXTERN_FUNC(__imp__XMsgSystemProcessCall);
PPC_EXTERN_FUNC(__imp__XamGetPrivateEnumStructureFromHandle);
PPC_EXTERN_FUNC(__imp__XamUserCreatePlayerEnumerator);

PPC_EXTERN_FUNC(__imp__XAudioQueryDriverPerformance);
PPC_EXTERN_FUNC(__imp__XamUserCreateAchievementEnumerator);
PPC_EXTERN_FUNC(__imp__XamUserGetXUID);
PPC_EXTERN_FUNC(__imp__XamParseGamerTileKey);
PPC_EXTERN_FUNC(__imp__XamWriteGamerTile);
PPC_EXTERN_FUNC(__imp__XamInputGetKeystrokeEx);
PPC_EXTERN_FUNC(__imp__XamVoiceCreate);
PPC_EXTERN_FUNC(__imp__XamVoiceSubmitPacket);
PPC_EXTERN_FUNC(__imp__XamVoiceClose);
PPC_EXTERN_FUNC(__imp__XMsgCancelIORequest);

// XAM UI dialogs
PPC_EXTERN_FUNC(__imp__XamShowSigninUIp);
PPC_EXTERN_FUNC(__imp__XamShowFriendsUI);
PPC_EXTERN_FUNC(__imp__XamShowPlayersUI);
PPC_EXTERN_FUNC(__imp__XamShowMessagesUI);
PPC_EXTERN_FUNC(__imp__XamShowKeyboardUI);
PPC_EXTERN_FUNC(__imp__XamShowQuickChatUI);
PPC_EXTERN_FUNC(__imp__XamShowVoiceMailUI);
PPC_EXTERN_FUNC(__imp__XamShowGamerCardUIForXUID);
PPC_EXTERN_FUNC(__imp__XamShowAchievementsUI);
PPC_EXTERN_FUNC(__imp__XamShowPlayerReviewUI);
PPC_EXTERN_FUNC(__imp__XamShowMarketplaceUI);
PPC_EXTERN_FUNC(__imp__XamShowMessageComposeUI);
PPC_EXTERN_FUNC(__imp__XamShowGameInviteUI);
PPC_EXTERN_FUNC(__imp__XamShowFriendRequestUI);

// XMA extra
PPC_EXTERN_FUNC(__imp__XMASetInputBufferReadOffset);
PPC_EXTERN_FUNC(__imp__XMABlockWhileInUse);
PPC_EXTERN_FUNC(__imp__XMASetLoopData);

// Misc
PPC_EXTERN_FUNC(__imp__Refresh);


PPC_EXTERN_FUNC(__imp__sub_82539870);
PPC_EXTERN_FUNC(__imp__sub_82849BF8);
PPC_EXTERN_FUNC(__imp__sub_82881020);

// Build lookup table
static std::unordered_map<std::string, PPCFunc*> g_importLookup;

static void InitializeImportLookup()
{
    if (!g_importLookup.empty())
        return;

    // Register all imports
    g_importLookup["__imp__DbgBreakPoint"] = &__imp__DbgBreakPoint;
    g_importLookup["__imp__DbgPrint"] = &__imp__DbgPrint;
    g_importLookup["__imp__ExAllocatePool"] = &__imp__ExAllocatePool;
    g_importLookup["__imp__ExAllocatePoolWithTag"] = &__imp__ExAllocatePoolWithTag;
    g_importLookup["__imp__ExCreateThread"] = &__imp__ExCreateThread;
    g_importLookup["__imp__ExFreePool"] = &__imp__ExFreePool;
    g_importLookup["__imp__ExGetXConfigSetting"] = &__imp__ExGetXConfigSetting;
    g_importLookup["__imp__ExRegisterTitleTerminateNotification"] = &__imp__ExRegisterTitleTerminateNotification;
    g_importLookup["__imp__ExTerminateThread"] = &__imp__ExTerminateThread;
    g_importLookup["__imp__FscSetCacheElementCount"] = &__imp__FscSetCacheElementCount;
    g_importLookup["__imp__HalReturnToFirmware"] = &__imp__HalReturnToFirmware;
    g_importLookup["__imp__IoCheckShareAccess"] = &__imp__IoCheckShareAccess;
    g_importLookup["__imp__IoCompleteRequest"] = &__imp__IoCompleteRequest;
    g_importLookup["__imp__IoCreateDevice"] = &__imp__IoCreateDevice;
    g_importLookup["__imp__IoDeleteDevice"] = &__imp__IoDeleteDevice;
    g_importLookup["__imp__IoInvalidDeviceRequest"] = &__imp__IoInvalidDeviceRequest;
    g_importLookup["__imp__IoRemoveShareAccess"] = &__imp__IoRemoveShareAccess;
    g_importLookup["__imp__IoSetShareAccess"] = &__imp__IoSetShareAccess;
    g_importLookup["__imp__KeAcquireSpinLockAtRaisedIrql"] = &__imp__KeAcquireSpinLockAtRaisedIrql;
    g_importLookup["__imp__KeBugCheck"] = &__imp__KeBugCheck;
    g_importLookup["__imp__KeBugCheckEx"] = &__imp__KeBugCheckEx;
    g_importLookup["__imp__KeDelayExecutionThread"] = &__imp__KeDelayExecutionThread;
    g_importLookup["__imp__KeEnableFpuExceptions"] = &__imp__KeEnableFpuExceptions;
    g_importLookup["__imp__KeEnterCriticalRegion"] = &__imp__KeEnterCriticalRegion;
    g_importLookup["__imp__KeGetCurrentProcessType"] = &__imp__KeGetCurrentProcessType;
    g_importLookup["__imp__KeInitializeSemaphore"] = &__imp__KeInitializeSemaphore;
    g_importLookup["__imp__KeLeaveCriticalRegion"] = &__imp__KeLeaveCriticalRegion;
    g_importLookup["__imp__KeLockL2"] = &__imp__KeLockL2;
    g_importLookup["__imp__KePulseEvent"] = &__imp__KePulseEvent;
    g_importLookup["__imp__KeQueryBasePriorityThread"] = &__imp__KeQueryBasePriorityThread;
    g_importLookup["__imp__KeQueryPerformanceFrequency"] = &__imp__KeQueryPerformanceFrequency;
    g_importLookup["__imp__KeQuerySystemTime"] = &__imp__KeQuerySystemTime;
    g_importLookup["__imp__KeRaiseIrqlToDpcLevel"] = &__imp__KeRaiseIrqlToDpcLevel;
    g_importLookup["__imp__KeReleaseSemaphore"] = &__imp__KeReleaseSemaphore;
    g_importLookup["__imp__KeReleaseSpinLockFromRaisedIrql"] = &__imp__KeReleaseSpinLockFromRaisedIrql;
    g_importLookup["__imp__KeResetEvent"] = &__imp__KeResetEvent;
    g_importLookup["__imp__KeResumeThread"] = &__imp__KeResumeThread;
    g_importLookup["__imp__KeSetAffinityThread"] = &__imp__KeSetAffinityThread;
    g_importLookup["__imp__KeSetBasePriorityThread"] = &__imp__KeSetBasePriorityThread;
    g_importLookup["__imp__KeSetDisableBoostThread"] = &__imp__KeSetDisableBoostThread;
    g_importLookup["__imp__KeSetEvent"] = &__imp__KeSetEvent;
    g_importLookup["__imp__KeTlsAlloc"] = &__imp__KeTlsAlloc;
    g_importLookup["__imp__KeTlsFree"] = &__imp__KeTlsFree;
    g_importLookup["__imp__KeTlsGetValue"] = &__imp__KeTlsGetValue;
    g_importLookup["__imp__KeTlsSetValue"] = &__imp__KeTlsSetValue;
    g_importLookup["__imp__KeTryToAcquireSpinLockAtRaisedIrql"] = &__imp__KeTryToAcquireSpinLockAtRaisedIrql;
    g_importLookup["__imp__KeUnlockL2"] = &__imp__KeUnlockL2;
    g_importLookup["__imp__KeWaitForMultipleObjects"] = &__imp__KeWaitForMultipleObjects;
    g_importLookup["__imp__KeWaitForSingleObject"] = &__imp__KeWaitForSingleObject;
    g_importLookup["__imp__KfAcquireSpinLock"] = &__imp__KfAcquireSpinLock;
    g_importLookup["__imp__KfLowerIrql"] = &__imp__KfLowerIrql;
    g_importLookup["__imp__KfReleaseSpinLock"] = &__imp__KfReleaseSpinLock;
    g_importLookup["__imp__KiApcNormalRoutineNop"] = &__imp__KiApcNormalRoutineNop;
    g_importLookup["__imp__MmAllocatePhysicalMemory"] = &__imp__MmAllocatePhysicalMemory;
    g_importLookup["__imp__MmAllocatePhysicalMemoryEx"] = &__imp__MmAllocatePhysicalMemoryEx;
    g_importLookup["__imp__MmFreePhysicalMemory"] = &__imp__MmFreePhysicalMemory;
    g_importLookup["__imp__MmGetPhysicalAddress"] = &__imp__MmGetPhysicalAddress;
    g_importLookup["__imp__MmQueryAddressProtect"] = &__imp__MmQueryAddressProtect;
    g_importLookup["__imp__MmQueryAllocationSize"] = &__imp__MmQueryAllocationSize;
    g_importLookup["__imp__MmQueryStatistics"] = &__imp__MmQueryStatistics;
    g_importLookup["__imp__MmSetAddressProtect"] = &__imp__MmSetAddressProtect;
    g_importLookup["__imp__NetDll_WSACleanup"] = &__imp__NetDll_WSACleanup;
    g_importLookup["__imp__NetDll_WSAStartup"] = &__imp__NetDll_WSAStartup;
    g_importLookup["__imp__NetDll_XNetGetTitleXnAddr"] = &__imp__NetDll_XNetGetTitleXnAddr;
    g_importLookup["__imp__NetDll_XNetStartup"] = &__imp__NetDll_XNetStartup;
    g_importLookup["__imp__NetDll_XNetCleanup"] = &__imp__NetDll_XNetCleanup;

    g_importLookup["__imp__NetDll___WSAFDIsSet"] = &__imp__NetDll___WSAFDIsSet;
    g_importLookup["__imp__NetDll_accept"] = &__imp__NetDll_accept;
    g_importLookup["__imp__NetDll_bind"] = &__imp__NetDll_bind;
    g_importLookup["__imp__NetDll_closesocket"] = &__imp__NetDll_closesocket;
    g_importLookup["__imp__NetDll_connect"] = &__imp__NetDll_connect;
    g_importLookup["__imp__NetDll_inet_addr"] = &__imp__NetDll_inet_addr;
    g_importLookup["__imp__NetDll_listen"] = &__imp__NetDll_listen;
    g_importLookup["__imp__NetDll_recv"] = &__imp__NetDll_recv;
    g_importLookup["__imp__NetDll_select"] = &__imp__NetDll_select;
    g_importLookup["__imp__NetDll_send"] = &__imp__NetDll_send;
    g_importLookup["__imp__NetDll_setsockopt"] = &__imp__NetDll_setsockopt;
    g_importLookup["__imp__NetDll_socket"] = &__imp__NetDll_socket;
    g_importLookup["__imp__NtAllocateVirtualMemory"] = &__imp__NtAllocateVirtualMemory;
    g_importLookup["__imp__NtCancelTimer"] = &__imp__NtCancelTimer;
    g_importLookup["__imp__NtClearEvent"] = &__imp__NtClearEvent;
    g_importLookup["__imp__NtClose"] = &__imp__NtClose;
    g_importLookup["__imp__NtCreateEvent"] = &__imp__NtCreateEvent;
    g_importLookup["__imp__NtCreateFile"] = &__imp__NtCreateFile;
    g_importLookup["__imp__NtCreateIoCompletion"] = &__imp__NtCreateIoCompletion;
    g_importLookup["__imp__NtCreateMutant"] = &__imp__NtCreateMutant;
    g_importLookup["__imp__NtCreateSemaphore"] = &__imp__NtCreateSemaphore;
    g_importLookup["__imp__NtCreateTimer"] = &__imp__NtCreateTimer;
    g_importLookup["__imp__NtDuplicateObject"] = &__imp__NtDuplicateObject;
    g_importLookup["__imp__NtFlushBuffersFile"] = &__imp__NtFlushBuffersFile;
    g_importLookup["__imp__NtFreeVirtualMemory"] = &__imp__NtFreeVirtualMemory;
    g_importLookup["__imp__NtOpenFile"] = &__imp__NtOpenFile;
    g_importLookup["__imp__NtProtectVirtualMemory"] = &__imp__NtProtectVirtualMemory;
    g_importLookup["__imp__NtPulseEvent"] = &__imp__NtPulseEvent;
    g_importLookup["__imp__NtQueryDirectoryFile"] = &__imp__NtQueryDirectoryFile;
    g_importLookup["__imp__NtQueryFullAttributesFile"] = &__imp__NtQueryFullAttributesFile;
    g_importLookup["__imp__NtQueryInformationFile"] = &__imp__NtQueryInformationFile;
    g_importLookup["__imp__NtQueryVirtualMemory"] = &__imp__NtQueryVirtualMemory;
    g_importLookup["__imp__NtQueryVolumeInformationFile"] = &__imp__NtQueryVolumeInformationFile;
    g_importLookup["__imp__NtQueueApcThread"] = &__imp__NtQueueApcThread;
    g_importLookup["__imp__NtReadFile"] = &__imp__NtReadFile;
    g_importLookup["__imp__NtReleaseMutant"] = &__imp__NtReleaseMutant;
    g_importLookup["__imp__NtReleaseSemaphore"] = &__imp__NtReleaseSemaphore;
    g_importLookup["__imp__NtRemoveIoCompletion"] = &__imp__NtRemoveIoCompletion;
    g_importLookup["__imp__NtResumeThread"] = &__imp__NtResumeThread;
    g_importLookup["__imp__NtSetEvent"] = &__imp__NtSetEvent;
    g_importLookup["__imp__NtSetInformationFile"] = &__imp__NtSetInformationFile;
    g_importLookup["__imp__NtSetIoCompletion"] = &__imp__NtSetIoCompletion;
    g_importLookup["__imp__NtSetTimerEx"] = &__imp__NtSetTimerEx;
    g_importLookup["__imp__NtSignalAndWaitForSingleObjectEx"] = &__imp__NtSignalAndWaitForSingleObjectEx;
    g_importLookup["__imp__NtSuspendThread"] = &__imp__NtSuspendThread;
    g_importLookup["__imp__NtWaitForMultipleObjectsEx"] = &__imp__NtWaitForMultipleObjectsEx;
    g_importLookup["__imp__NtWaitForSingleObjectEx"] = &__imp__NtWaitForSingleObjectEx;
    g_importLookup["__imp__NtWriteFile"] = &__imp__NtWriteFile;
    g_importLookup["__imp__NtYieldExecution"] = &__imp__NtYieldExecution;
    g_importLookup["__imp__ObCreateSymbolicLink"] = &__imp__ObCreateSymbolicLink;
    g_importLookup["__imp__ObDeleteSymbolicLink"] = &__imp__ObDeleteSymbolicLink;
    g_importLookup["__imp__ObDereferenceObject"] = &__imp__ObDereferenceObject;
    g_importLookup["__imp__ObIsTitleObject"] = &__imp__ObIsTitleObject;
    g_importLookup["__imp__ObLookupThreadByThreadId"] = &__imp__ObLookupThreadByThreadId;
    g_importLookup["__imp__ObOpenObjectByName"] = &__imp__ObOpenObjectByName;
    g_importLookup["__imp__ObOpenObjectByPointer"] = &__imp__ObOpenObjectByPointer;
    g_importLookup["__imp__ObReferenceObject"] = &__imp__ObReferenceObject;
    g_importLookup["__imp__ObReferenceObjectByHandle"] = &__imp__ObReferenceObjectByHandle;
    g_importLookup["__imp__RtlCaptureContext"] = &__imp__RtlCaptureContext;
    g_importLookup["__imp__RtlCompareMemory"] = &__imp__RtlCompareMemory;
    g_importLookup["__imp__RtlCompareMemoryUlong"] = &__imp__RtlCompareMemoryUlong;
    g_importLookup["__imp__RtlCompareStringN"] = &__imp__RtlCompareStringN;
    g_importLookup["__imp__RtlEnterCriticalSection"] = &__imp__RtlEnterCriticalSection;
    g_importLookup["__imp__RtlFillMemoryUlong"] = &__imp__RtlFillMemoryUlong;
    g_importLookup["__imp__RtlFreeAnsiString"] = &__imp__RtlFreeAnsiString;
    g_importLookup["__imp__RtlImageXexHeaderField"] = &__imp__RtlImageXexHeaderField;
    g_importLookup["__imp__RtlInitAnsiString"] = &__imp__RtlInitAnsiString;
    g_importLookup["__imp__RtlInitUnicodeString"] = &__imp__RtlInitUnicodeString;
    g_importLookup["__imp__RtlInitializeCriticalSection"] = &__imp__RtlInitializeCriticalSection;
    g_importLookup["__imp__RtlInitializeCriticalSectionAndSpinCount"] = &__imp__RtlInitializeCriticalSectionAndSpinCount;
    g_importLookup["__imp__RtlLeaveCriticalSection"] = &__imp__RtlLeaveCriticalSection;
    g_importLookup["__imp__RtlMultiByteToUnicodeN"] = &__imp__RtlMultiByteToUnicodeN;
    g_importLookup["__imp__RtlNtStatusToDosError"] = &__imp__RtlNtStatusToDosError;
    g_importLookup["__imp__RtlRaiseException"] = &__imp__RtlRaiseException;
    g_importLookup["__imp__RtlTimeFieldsToTime"] = &__imp__RtlTimeFieldsToTime;
    g_importLookup["__imp__RtlTimeToTimeFields"] = &__imp__RtlTimeToTimeFields;
    g_importLookup["__imp__RtlTryEnterCriticalSection"] = &__imp__RtlTryEnterCriticalSection;
    g_importLookup["__imp__RtlUnicodeStringToAnsiString"] = &__imp__RtlUnicodeStringToAnsiString;
    g_importLookup["__imp__RtlUnicodeToMultiByteN"] = &__imp__RtlUnicodeToMultiByteN;
    g_importLookup["__imp__RtlUnwind"] = &__imp__RtlUnwind;
    g_importLookup["__imp__RtlUpcaseUnicodeChar"] = &__imp__RtlUpcaseUnicodeChar;
    g_importLookup["__imp__StfsControlDevice"] = &__imp__StfsControlDevice;
    g_importLookup["__imp__StfsCreateDevice"] = &__imp__StfsCreateDevice;
    g_importLookup["__imp__VdCallGraphicsNotificationRoutines"] = &__imp__VdCallGraphicsNotificationRoutines;
    g_importLookup["__imp__VdEnableDisableClockGating"] = &__imp__VdEnableDisableClockGating;
    g_importLookup["__imp__VdEnableRingBufferRPtrWriteBack"] = &__imp__VdEnableRingBufferRPtrWriteBack;
    g_importLookup["__imp__VdGetCurrentDisplayGamma"] = &__imp__VdGetCurrentDisplayGamma;
    g_importLookup["__imp__VdGetCurrentDisplayInformation"] = &__imp__VdGetCurrentDisplayInformation;
    g_importLookup["__imp__VdGetGraphicsAsicID"] = &__imp__VdGetGraphicsAsicID;
    g_importLookup["__imp__VdGetSystemCommandBuffer"] = &__imp__VdGetSystemCommandBuffer;
    g_importLookup["__imp__VdInitializeEDRAM"] = &__imp__VdInitializeEDRAM;
    g_importLookup["__imp__VdInitializeEngines"] = &__imp__VdInitializeEngines;
    g_importLookup["__imp__VdInitializeRingBuffer"] = &__imp__VdInitializeRingBuffer;
    g_importLookup["__imp__VdInitializeScalerCommandBuffer"] = &__imp__VdInitializeScalerCommandBuffer;
    g_importLookup["__imp__VdIsHSIOTrainingSucceeded"] = &__imp__VdIsHSIOTrainingSucceeded;
    g_importLookup["__imp__VdPersistDisplay"] = &__imp__VdPersistDisplay;
    // XAM user/profile
    g_importLookup["__imp__XamUserGetName"] = &__imp__XamUserGetName;
    g_importLookup["__imp__XamUserAreUsersFriends"] = &__imp__XamUserAreUsersFriends;
    g_importLookup["__imp__XamUserCheckPrivilege"] = &__imp__XamUserCheckPrivilege;
    g_importLookup["__imp__XamUserCreateStatsEnumerator"] = &__imp__XamUserCreateStatsEnumerator;
    g_importLookup["__imp__XamReadTileToTexture"] = &__imp__XamReadTileToTexture;
    g_importLookup["__imp__XamUserWriteProfileSettings"] = &__imp__XamUserWriteProfileSettings;

    // NetDll WSA/sockets
    g_importLookup["__imp__NetDll_WSASetLastError"] = &__imp__NetDll_WSASetLastError;
    g_importLookup["__imp__NetDll_WSAGetLastError"] = &__imp__NetDll_WSAGetLastError;
    g_importLookup["__imp__NetDll_WSAEventSelect"] = &__imp__NetDll_WSAEventSelect;
    g_importLookup["__imp__NetDll_WSASendTo"] = &__imp__NetDll_WSASendTo;
    g_importLookup["__imp__NetDll_sendto"] = &__imp__NetDll_sendto;
    g_importLookup["__imp__NetDll_WSASend"] = &__imp__NetDll_WSASend;
    g_importLookup["__imp__NetDll_WSARecvFrom"] = &__imp__NetDll_WSARecvFrom;
    g_importLookup["__imp__NetDll_recvfrom"] = &__imp__NetDll_recvfrom;
    g_importLookup["__imp__NetDll_WSARecv"] = &__imp__NetDll_WSARecv;
    g_importLookup["__imp__NetDll_WSACancelOverlappedIO"] = &__imp__NetDll_WSACancelOverlappedIO;
    g_importLookup["__imp__NetDll_WSAGetOverlappedResult"] = &__imp__NetDll_WSAGetOverlappedResult;
    g_importLookup["__imp__NetDll_getpeername"] = &__imp__NetDll_getpeername;
    g_importLookup["__imp__NetDll_getsockname"] = &__imp__NetDll_getsockname;
    g_importLookup["__imp__NetDll_getsockopt"] = &__imp__NetDll_getsockopt;
    g_importLookup["__imp__NetDll_ioctlsocket"] = &__imp__NetDll_ioctlsocket;
    g_importLookup["__imp__NetDll_shutdown"] = &__imp__NetDll_shutdown;

    // NetDll XNet core set
    g_importLookup["__imp__NetDll_XNetRandom"] = &__imp__NetDll_XNetRandom;
    g_importLookup["__imp__NetDll_XNetCreateKey"] = &__imp__NetDll_XNetCreateKey;
    g_importLookup["__imp__NetDll_XNetRegisterKey"] = &__imp__NetDll_XNetRegisterKey;
    g_importLookup["__imp__NetDll_XNetUnregisterKey"] = &__imp__NetDll_XNetUnregisterKey;
    // Additional XNet opts/debug
    g_importLookup["__imp__NetDll_XNetGetOpt"] = &__imp__NetDll_XNetGetOpt;
    g_importLookup["__imp__NetDll_XNetSetOpt"] = &__imp__NetDll_XNetSetOpt;
    g_importLookup["__imp__NetDll_XNetQosGetListenStats"] = &__imp__NetDll_XNetQosGetListenStats;
    g_importLookup["__imp__NetDll_XNetGetEthernetLinkStatus"] = &__imp__NetDll_XNetGetEthernetLinkStatus;
    g_importLookup["__imp__NetDll_XNetGetBroadcastVersionStatus"] = &__imp__NetDll_XNetGetBroadcastVersionStatus;
    g_importLookup["__imp__NetDll_XNetGetDebugXnAddr"] = &__imp__NetDll_XNetGetDebugXnAddr;

    // Misc platform / UI / voice / cache
    g_importLookup["__imp__XNetLogonGetTitleID"] = &__imp__XNetLogonGetTitleID;
    g_importLookup["__imp__FscGetCacheElementCount"] = &__imp__FscGetCacheElementCount;
    g_importLookup["__imp__XamCreateEnumeratorHandle"] = &__imp__XamCreateEnumeratorHandle;
    g_importLookup["__imp__XMsgSystemProcessCall"] = &__imp__XMsgSystemProcessCall;
    g_importLookup["__imp__XamGetPrivateEnumStructureFromHandle"] = &__imp__XamGetPrivateEnumStructureFromHandle;
    g_importLookup["__imp__XamUserCreatePlayerEnumerator"] = &__imp__XamUserCreatePlayerEnumerator;

    g_importLookup["__imp__XAudioQueryDriverPerformance"] = &__imp__XAudioQueryDriverPerformance;
    g_importLookup["__imp__XamUserCreateAchievementEnumerator"] = &__imp__XamUserCreateAchievementEnumerator;
    g_importLookup["__imp__XamUserGetXUID"] = &__imp__XamUserGetXUID;
    g_importLookup["__imp__XamParseGamerTileKey"] = &__imp__XamParseGamerTileKey;
    g_importLookup["__imp__XamWriteGamerTile"] = &__imp__XamWriteGamerTile;
    g_importLookup["__imp__XamInputGetKeystrokeEx"] = &__imp__XamInputGetKeystrokeEx;
    g_importLookup["__imp__XamVoiceCreate"] = &__imp__XamVoiceCreate;
    g_importLookup["__imp__XamVoiceSubmitPacket"] = &__imp__XamVoiceSubmitPacket;
    g_importLookup["__imp__XamVoiceClose"] = &__imp__XamVoiceClose;
    g_importLookup["__imp__XMsgCancelIORequest"] = &__imp__XMsgCancelIORequest;

    // XAM UI dialogs
    g_importLookup["__imp__XamShowSigninUIp"] = &__imp__XamShowSigninUIp;
    g_importLookup["__imp__XamShowFriendsUI"] = &__imp__XamShowFriendsUI;
    g_importLookup["__imp__XamShowPlayersUI"] = &__imp__XamShowPlayersUI;
    g_importLookup["__imp__XamShowMessagesUI"] = &__imp__XamShowMessagesUI;
    g_importLookup["__imp__XamShowKeyboardUI"] = &__imp__XamShowKeyboardUI;
    g_importLookup["__imp__XamShowQuickChatUI"] = &__imp__XamShowQuickChatUI;
    g_importLookup["__imp__XamShowVoiceMailUI"] = &__imp__XamShowVoiceMailUI;
    g_importLookup["__imp__XamShowGamerCardUIForXUID"] = &__imp__XamShowGamerCardUIForXUID;
    g_importLookup["__imp__XamShowAchievementsUI"] = &__imp__XamShowAchievementsUI;
    g_importLookup["__imp__XamShowPlayerReviewUI"] = &__imp__XamShowPlayerReviewUI;
    g_importLookup["__imp__XamShowMarketplaceUI"] = &__imp__XamShowMarketplaceUI;
    g_importLookup["__imp__XamShowMessageComposeUI"] = &__imp__XamShowMessageComposeUI;
    g_importLookup["__imp__XamShowGameInviteUI"] = &__imp__XamShowGameInviteUI;
    g_importLookup["__imp__XamShowFriendRequestUI"] = &__imp__XamShowFriendRequestUI;

    // XMA extras
    g_importLookup["__imp__XMASetInputBufferReadOffset"] = &__imp__XMASetInputBufferReadOffset;
    g_importLookup["__imp__XMABlockWhileInUse"] = &__imp__XMABlockWhileInUse;
    g_importLookup["__imp__XMASetLoopData"] = &__imp__XMASetLoopData;

    // Misc
    g_importLookup["__imp__Refresh"] = &__imp__Refresh;

    g_importLookup["__imp__NetDll_XNetXnAddrToInAddr"] = &__imp__NetDll_XNetXnAddrToInAddr;
    g_importLookup["__imp__NetDll_XNetServerToInAddr"] = &__imp__NetDll_XNetServerToInAddr;
    g_importLookup["__imp__NetDll_XNetTsAddrToInAddr"] = &__imp__NetDll_XNetTsAddrToInAddr;
    g_importLookup["__imp__NetDll_XNetInAddrToXnAddr"] = &__imp__NetDll_XNetInAddrToXnAddr;
    g_importLookup["__imp__NetDll_XNetInAddrToServer"] = &__imp__NetDll_XNetInAddrToServer;
    g_importLookup["__imp__NetDll_XNetInAddrToString"] = &__imp__NetDll_XNetInAddrToString;
    g_importLookup["__imp__NetDll_XNetUnregisterInAddr"] = &__imp__NetDll_XNetUnregisterInAddr;
    g_importLookup["__imp__NetDll_XNetXnAddrToMachineId"] = &__imp__NetDll_XNetXnAddrToMachineId;
    g_importLookup["__imp__NetDll_XNetConnect"] = &__imp__NetDll_XNetConnect;
    g_importLookup["__imp__NetDll_XNetGetConnectStatus"] = &__imp__NetDll_XNetGetConnectStatus;
    g_importLookup["__imp__NetDll_XNetDnsLookup"] = &__imp__NetDll_XNetDnsLookup;
    g_importLookup["__imp__NetDll_XNetDnsRelease"] = &__imp__NetDll_XNetDnsRelease;
    g_importLookup["__imp__NetDll_XNetQosListen"] = &__imp__NetDll_XNetQosListen;
    g_importLookup["__imp__NetDll_XNetQosLookup"] = &__imp__NetDll_XNetQosLookup;
    g_importLookup["__imp__NetDll_XNetQosServiceLookup"] = &__imp__NetDll_XNetQosServiceLookup;
    g_importLookup["__imp__NetDll_XNetQosRelease"] = &__imp__NetDll_XNetQosRelease;

    // XeCrypt / XeKeys
    g_importLookup["__imp__XeKeysGetKeyProperties"] = &__imp__XeKeysGetKeyProperties;
    g_importLookup["__imp__XeCryptAesKey"] = &__imp__XeCryptAesKey;
    g_importLookup["__imp__XeCryptAesEcb"] = &__imp__XeCryptAesEcb;
    g_importLookup["__imp__XeKeysQwNeRsaPrvCrypt"] = &__imp__XeKeysQwNeRsaPrvCrypt;
    g_importLookup["__imp__XeCryptBnQw_SwapDwQwLeBe"] = &__imp__XeCryptBnQw_SwapDwQwLeBe;
    g_importLookup["__imp__XeCryptRandom"] = &__imp__XeCryptRandom;
    g_importLookup["__imp__XeCryptShaFinal"] = &__imp__XeCryptShaFinal;
    g_importLookup["__imp__XeCryptShaUpdate"] = &__imp__XeCryptShaUpdate;
    g_importLookup["__imp__XeCryptShaInit"] = &__imp__XeCryptShaInit;
    g_importLookup["__imp__XeCryptBnQwNeRsaPubCrypt"] = &__imp__XeCryptBnQwNeRsaPubCrypt;
    g_importLookup["__imp__XeCryptBnQwNeRsaPrvCrypt"] = &__imp__XeCryptBnQwNeRsaPrvCrypt;
    g_importLookup["__imp__XeCryptBnQwNeRsaKeyGen"] = &__imp__XeCryptBnQwNeRsaKeyGen;
    g_importLookup["__imp__XeCryptRc4Key"] = &__imp__XeCryptRc4Key;
    g_importLookup["__imp__XeCryptRc4Ecb"] = &__imp__XeCryptRc4Ecb;

    // XMA
    g_importLookup["__imp__XMAGetOutputBufferWriteOffset"] = &__imp__XMAGetOutputBufferWriteOffset;
    g_importLookup["__imp__XMASetInputBuffer1"] = &__imp__XMASetInputBuffer1;
    g_importLookup["__imp__XMASetOutputBufferReadOffset"] = &__imp__XMASetOutputBufferReadOffset;
    g_importLookup["__imp__XMAInitializeContext"] = &__imp__XMAInitializeContext;
    g_importLookup["__imp__XMASetInputBuffer0"] = &__imp__XMASetInputBuffer0;
    g_importLookup["__imp__XMADisableContext"] = &__imp__XMADisableContext;
    g_importLookup["__imp__XMAEnableContext"] = &__imp__XMAEnableContext;
    g_importLookup["__imp__XMAIsOutputBufferValid"] = &__imp__XMAIsOutputBufferValid;
    g_importLookup["__imp__XMASetInputBuffer0Valid"] = &__imp__XMASetInputBuffer0Valid;
    g_importLookup["__imp__XMAGetOutputBufferReadOffset"] = &__imp__XMAGetOutputBufferReadOffset;
    g_importLookup["__imp__XMAIsInputBuffer1Valid"] = &__imp__XMAIsInputBuffer1Valid;
    g_importLookup["__imp__XMASetOutputBufferValid"] = &__imp__XMASetOutputBufferValid;
    g_importLookup["__imp__XMAIsInputBuffer0Valid"] = &__imp__XMAIsInputBuffer0Valid;
    g_importLookup["__imp__XMASetInputBuffer1Valid"] = &__imp__XMASetInputBuffer1Valid;

    g_importLookup["__imp__VdQuerySystemCommandBuffer"] = &__imp__VdQuerySystemCommandBuffer;
    g_importLookup["__imp__VdQueryVideoFlags"] = &__imp__VdQueryVideoFlags;
    g_importLookup["__imp__VdQueryVideoMode"] = &__imp__VdQueryVideoMode;
    g_importLookup["__imp__VdRegisterGraphicsNotificationRoutine"] = &__imp__VdRegisterGraphicsNotificationRoutine;
    g_importLookup["__imp__VdRetrainEDRAM"] = &__imp__VdRetrainEDRAM;
    g_importLookup["__imp__VdRetrainEDRAMWorker"] = &__imp__VdRetrainEDRAMWorker;
    g_importLookup["__imp__VdSetDisplayMode"] = &__imp__VdSetDisplayMode;
    g_importLookup["__imp__VdSetGraphicsInterruptCallback"] = &__imp__VdSetGraphicsInterruptCallback;
    g_importLookup["__imp__VdSetSystemCommandBuffer"] = &__imp__VdSetSystemCommandBuffer;
    g_importLookup["__imp__VdSetSystemCommandBufferGpuIdentifierAddress"] = &__imp__VdSetSystemCommandBufferGpuIdentifierAddress;
    g_importLookup["__imp__VdShutdownEngines"] = &__imp__VdShutdownEngines;
    g_importLookup["__imp__VdSwap"] = &__imp__VdSwap;
    g_importLookup["__imp__VdUnregisterGraphicsNotificationRoutine"] = &__imp__VdUnregisterGraphicsNotificationRoutine;
    g_importLookup["__imp__XAudioGetVoiceCategoryVolume"] = &__imp__XAudioGetVoiceCategoryVolume;
    g_importLookup["__imp__XAudioGetVoiceCategoryVolumeChangeMask"] = &__imp__XAudioGetVoiceCategoryVolumeChangeMask;
    g_importLookup["__imp__XAudioRegisterRenderDriverClient"] = &__imp__XAudioRegisterRenderDriverClient;
    g_importLookup["__imp__XAudioSubmitRenderDriverFrame"] = &__imp__XAudioSubmitRenderDriverFrame;
    g_importLookup["__imp__XAudioUnregisterRenderDriverClient"] = &__imp__XAudioUnregisterRenderDriverClient;
    g_importLookup["__imp__XGetAVPack"] = &__imp__XGetAVPack;
    g_importLookup["__imp__XGetGameRegion"] = &__imp__XGetGameRegion;
    g_importLookup["__imp__XGetLanguage"] = &__imp__XGetLanguage;
    g_importLookup["__imp__XGetVideoMode"] = &__imp__XGetVideoMode;
    g_importLookup["__imp__XMACreateContext"] = &__imp__XMACreateContext;
    g_importLookup["__imp__XMAReleaseContext"] = &__imp__XMAReleaseContext;
    // Added mappings for additional XAM/NetDll imports needed by MW05
    g_importLookup["__imp__XamVoiceHeadsetPresent"] = &__imp__XamVoiceHeadsetPresent;
    g_importLookup["__imp__XamContentLaunchImage"] = &__imp__XamContentLaunchImage;
    g_importLookup["__imp__XamContentGetDeviceName"] = &__imp__XamContentGetDeviceName;
    g_importLookup["__imp__XamContentCreateDeviceEnumerator"] = &__imp__XamContentCreateDeviceEnumerator;
    g_importLookup["__imp__XamContentGetLicenseMask"] = &__imp__XamContentGetLicenseMask;
    g_importLookup["__imp__XamContentGetThumbnail"] = &__imp__XamContentGetThumbnail;
    g_importLookup["__imp__XamContentSetThumbnail"] = &__imp__XamContentSetThumbnail;
    g_importLookup["__imp__XamContentFlush"] = &__imp__XamContentFlush;
    g_importLookup["__imp__XamContentInstall"] = &__imp__XamContentInstall;
    g_importLookup["__imp__XamContentCreate"] = &__imp__XamContentCreate;
    g_importLookup["__imp__XamSessionCreateHandle"] = &__imp__XamSessionCreateHandle;
    g_importLookup["__imp__XamSessionRefObjByHandle"] = &__imp__XamSessionRefObjByHandle;
    g_importLookup["__imp__XamUserGetMembershipTierFromXUID"] = &__imp__XamUserGetMembershipTierFromXUID;
    g_importLookup["__imp__XamUserGetOnlineCountryFromXUID"] = &__imp__XamUserGetOnlineCountryFromXUID;
    g_importLookup["__imp__XNetLogonGetMachineID"] = &__imp__XNetLogonGetMachineID;

    g_importLookup["__imp__NetDll_XnpUnregisterKeyForCallerType"] = &__imp__NetDll_XnpUnregisterKeyForCallerType;
    g_importLookup["__imp__NetDll_XnpRegisterKeyForCallerType"] = &__imp__NetDll_XnpRegisterKeyForCallerType;
    g_importLookup["__imp__NetDll_XnpNoteSystemTime"] = &__imp__NetDll_XnpNoteSystemTime;
    g_importLookup["__imp__NetDll_XnpGetActiveSocketList"] = &__imp__NetDll_XnpGetActiveSocketList;
    g_importLookup["__imp__NetDll_XnpSetVlanXboxName"] = &__imp__NetDll_XnpSetVlanXboxName;
    g_importLookup["__imp__NetDll_XnpGetVlanXboxName"] = &__imp__NetDll_XnpGetVlanXboxName;
    g_importLookup["__imp__NetDll_XnpLogonSetPState"] = &__imp__NetDll_XnpLogonSetPState;
    g_importLookup["__imp__NetDll_XnpLogonSetQVals"] = &__imp__NetDll_XnpLogonSetQVals;
    g_importLookup["__imp__NetDll_XnpLogonGetQVals"] = &__imp__NetDll_XnpLogonGetQVals;
    g_importLookup["__imp__NetDll_XnpLogonClearQEvent"] = &__imp__NetDll_XnpLogonClearQEvent;
    g_importLookup["__imp__NetDll_XnpLogonSetQEvent"] = &__imp__NetDll_XnpLogonSetQEvent;
    g_importLookup["__imp__NetDll_XnpLogonSetQFlags"] = &__imp__NetDll_XnpLogonSetQFlags;
    g_importLookup["__imp__NetDll_XnpLogonGetQFlags"] = &__imp__NetDll_XnpLogonGetQFlags;
    g_importLookup["__imp__NetDll_XnpLogonGetStatus"] = &__imp__NetDll_XnpLogonGetStatus;
    g_importLookup["__imp__NetDll_XnpEthernetInterceptRecv"] = &__imp__NetDll_XnpEthernetInterceptRecv;
    g_importLookup["__imp__NetDll_XnpEthernetInterceptXmit"] = &__imp__NetDll_XnpEthernetInterceptXmit;
    g_importLookup["__imp__NetDll_XnpEthernetInterceptSetCallbacks"] = &__imp__NetDll_XnpEthernetInterceptSetCallbacks;
    g_importLookup["__imp__NetDll_XnpCapture"] = &__imp__NetDll_XnpCapture;
    g_importLookup["__imp__NetDll_XnpSaveMachineAccount"] = &__imp__NetDll_XnpSaveMachineAccount;
    g_importLookup["__imp__NetDll_XnpLoadMachineAccount"] = &__imp__NetDll_XnpLoadMachineAccount;
    g_importLookup["__imp__NetDll_XnpGetConfigStatus"] = &__imp__NetDll_XnpGetConfigStatus;
    g_importLookup["__imp__NetDll_XnpConfig"] = &__imp__NetDll_XnpConfig;
    g_importLookup["__imp__NetDll_XnpConfigUPnP"] = &__imp__NetDll_XnpConfigUPnP;
    g_importLookup["__imp__NetDll_XnpSaveConfigParams"] = &__imp__NetDll_XnpSaveConfigParams;
    g_importLookup["__imp__NetDll_XnpLoadConfigParams"] = &__imp__NetDll_XnpLoadConfigParams;

    g_importLookup["__imp__NetDll_WSACreateEvent"] = &__imp__NetDll_WSACreateEvent;
    g_importLookup["__imp__NetDll_WSACloseEvent"] = &__imp__NetDll_WSACloseEvent;
    g_importLookup["__imp__NetDll_WSASetEvent"] = &__imp__NetDll_WSASetEvent;
    g_importLookup["__imp__NetDll_WSAResetEvent"] = &__imp__NetDll_WSAResetEvent;
    g_importLookup["__imp__NetDll_WSAWaitForMultipleEvents"] = &__imp__NetDll_WSAWaitForMultipleEvents;

    g_importLookup["__imp___vsnprintf"] = &__imp___vsnprintf;
    g_importLookup["__imp__vsprintf"] = &__imp__vsprintf;

    // CRT formatting
    g_importLookup["__imp____vsnprintf"] = &__imp____vsnprintf;
    g_importLookup["__imp__sprintf"] = &__imp__sprintf;

    g_importLookup["__imp__XMsgInProcessCall"] = &__imp__XMsgInProcessCall;
    g_importLookup["__imp__XMsgStartIORequest"] = &__imp__XMsgStartIORequest;
    g_importLookup["__imp__XMsgStartIORequestEx"] = &__imp__XMsgStartIORequestEx;
    g_importLookup["__imp__XNotifyGetNext"] = &__imp__XNotifyGetNext;
    g_importLookup["__imp__XamAlloc"] = &__imp__XamAlloc;
    g_importLookup["__imp__XamContentClose"] = &__imp__XamContentClose;
    g_importLookup["__imp__XamContentCreateEnumerator"] = &__imp__XamContentCreateEnumerator;
    g_importLookup["__imp__XamContentCreateEx"] = &__imp__XamContentCreateEx;
    g_importLookup["__imp__XamContentDelete"] = &__imp__XamContentDelete;
    g_importLookup["__imp__XamContentGetCreator"] = &__imp__XamContentGetCreator;
    g_importLookup["__imp__XamContentGetDeviceData"] = &__imp__XamContentGetDeviceData;
    g_importLookup["__imp__XamContentGetDeviceState"] = &__imp__XamContentGetDeviceState;
    g_importLookup["__imp__XamEnableInactivityProcessing"] = &__imp__XamEnableInactivityProcessing;
    g_importLookup["__imp__XamEnumerate"] = &__imp__XamEnumerate;
    g_importLookup["__imp__XamFree"] = &__imp__XamFree;
    g_importLookup["__imp__XamGetExecutionId"] = &__imp__XamGetExecutionId;
    g_importLookup["__imp__XamGetSystemVersion"] = &__imp__XamGetSystemVersion;
    g_importLookup["__imp__XamInputGetCapabilities"] = &__imp__XamInputGetCapabilities;
    g_importLookup["__imp__XamInputGetState"] = &__imp__XamInputGetState;
    g_importLookup["__imp__XamInputSetState"] = &__imp__XamInputSetState;
    g_importLookup["__imp__XamLoaderGetLaunchData"] = &__imp__XamLoaderGetLaunchData;
    g_importLookup["__imp__XamLoaderGetLaunchDataSize"] = &__imp__XamLoaderGetLaunchDataSize;
    g_importLookup["__imp__XamLoaderLaunchTitle"] = &__imp__XamLoaderLaunchTitle;
    g_importLookup["__imp__XamLoaderSetLaunchData"] = &__imp__XamLoaderSetLaunchData;
    g_importLookup["__imp__XamLoaderTerminateTitle"] = &__imp__XamLoaderTerminateTitle;
    g_importLookup["__imp__XamNotifyCreateListener"] = &__imp__XamNotifyCreateListener;
    g_importLookup["__imp__XamResetInactivity"] = &__imp__XamResetInactivity;
    g_importLookup["__imp__XamShowDeviceSelectorUI"] = &__imp__XamShowDeviceSelectorUI;
    g_importLookup["__imp__XamShowDirtyDiscErrorUI"] = &__imp__XamShowDirtyDiscErrorUI;
    g_importLookup["__imp__XamShowMessageBoxUI"] = &__imp__XamShowMessageBoxUI;
    g_importLookup["__imp__XamShowMessageBoxUIEx"] = &__imp__XamShowMessageBoxUIEx;
    g_importLookup["__imp__XamShowSigninUI"] = &__imp__XamShowSigninUI;
    g_importLookup["__imp__XamUserGetSigninInfo"] = &__imp__XamUserGetSigninInfo;
    g_importLookup["__imp__XamUserGetSigninState"] = &__imp__XamUserGetSigninState;
    g_importLookup["__imp__XamUserReadProfileSettings"] = &__imp__XamUserReadProfileSettings;
    g_importLookup["__imp__XeCryptBnQwBeSigVerify"] = &__imp__XeCryptBnQwBeSigVerify;
    g_importLookup["__imp__XeCryptRotSumSha"] = &__imp__XeCryptRotSumSha;
    g_importLookup["__imp__XeCryptSha"] = &__imp__XeCryptSha;
    g_importLookup["__imp__XeKeysGetKey"] = &__imp__XeKeysGetKey;
    g_importLookup["__imp__XexCheckExecutablePrivilege"] = &__imp__XexCheckExecutablePrivilege;
    g_importLookup["__imp__XexGetModuleHandle"] = &__imp__XexGetModuleHandle;
    g_importLookup["__imp__XexGetModuleSection"] = &__imp__XexGetModuleSection;
    g_importLookup["__imp__XexGetProcedureAddress"] = &__imp__XexGetProcedureAddress;
    g_importLookup["__imp____C_specific_handler"] = &__imp____C_specific_handler;
    g_importLookup["__imp__sub_82539870"] = &__imp__sub_82539870;
    g_importLookup["__imp__sub_82849BF8"] = &__imp__sub_82849BF8;
    g_importLookup["__imp__sub_82881020"] = &__imp__sub_82881020;

}

extern "C" PPCFunc* GetImportFunctionByName(const char* name)
{
    InitializeImportLookup();

    auto it = g_importLookup.find(name);
    if (it != g_importLookup.end())
        return it->second;

    return nullptr;
}
