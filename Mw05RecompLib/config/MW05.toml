## Need for Speed: Most Wanted (2005) â€“ Xbox 360
## XenonRecomp title profile (config) for static recompilation
## MINIMAL VERSION - Following UnleashedRecomp's approach

[main]
# XEX input/output paths are relative to this config file location
file_path = "../private/default.xex"
# Optional patch file (.xexp) if present
# patch_file_path = "../private/default.xexp"
patched_file_path = "../private/default_patched.xex"
out_directory_path = "../ppc"
switch_table_file_path = "MW05_switch_tables.toml"

# Register allocation heuristics
# NOTE: Aggressive optimizations disabled temporarily due to trace.h dependencies
# TODO: Fix trace.h to work with aggressive optimizations, then re-enable
skip_lr = false
skip_msr = false
ctr_as_local = false
xer_as_local = false
reserved_as_local = false
cr_as_local = false
non_argument_as_local = false
non_volatile_as_local = false

# Prolog/epilog helpers (MW'05 addresses)
restgprlr_14_address = 0x826BDD80
savegprlr_14_address = 0x826BDD30
restfpr_14_address   = 0x826BED3C
savefpr_14_address   = 0x826BECF0
restvmx_14_address   = 0x826BEA58
savevmx_14_address   = 0x826BE7C0
restvmx_64_address   = 0x826BEAEC
savevmx_64_address   = 0x826BE854

# longjmp_address = 0x00000000
# setjmp_address = 0x00000000

# These functions do not exist in .pdata and do
# not analyze properly due to having jump tables
# NOTE: This list should be populated from actual recompiler errors
# Currently empty - let the recompiler handle everything automatically
functions = [
    { address = 0x8215CB08, size = 0x290 }, # allocate memory
    { address = 0x8215C790, size = 0xA8 },  # find free pool slot (returns 64-bit value in r3:r4)
    { address = 0x8215C838, size = 0x50 },  # initialize pool slot
    { address = 0x821BB4D0, size = 0x90 },  # audio initialization
    { address = 0x8262FA08, size = 0xAC },  # set thread affinity
    { address = 0x826B96B0, size = 0x58 },  # set thread name
    # DISABLED - Causes crashes, need to investigate which one
    # { address = 0x82441E80, size = 0xBC },  # main thread entry (calls main loop)
    # { address = 0x82441CF0, size = 0x168 }, # main loop
    # { address = 0x8261A5E8, size = 0x1EC }, # create worker threads
    { address = 0x823C8420, size = 0x90 }   # work queue processing - TEST THIS FIRST
]

# Invalid instructions (if any are discovered during testing)
# invalid_instructions = [
#     { data = 0x00000000, size = 4 }, # Padding
# ]

# Mid-ASM hooks (if needed for game-specific fixes)
# [[midasm_hook]]
# name = "ExampleMidAsmHook"
# address = 0x82000000
# registers = ["r3"]
